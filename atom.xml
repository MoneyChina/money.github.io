<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Money&#39;s space</title>
  
  
  <link href="https://money.github.io/atom.xml" rel="self"/>
  
  <link href="https://money.github.io/"/>
  <updated>2021-06-07T06:03:39.000Z</updated>
  <id>https://money.github.io/</id>
  
  <author>
    <name>Money</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://money.github.io/2021/06/07/hello-world/"/>
    <id>https://money.github.io/2021/06/07/hello-world/</id>
    <published>2021-06-07T06:03:39.000Z</published>
    <updated>2021-06-07T06:03:39.000Z</updated>
    
    <content type="html"><![CDATA[<mark class="hl-label orange">你好</mark> ,Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div>## Quick Start<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>你看我長得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>我覺得很漂亮 <img class="inline-img" src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px"/><br>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;mark class=&quot;hl-label orange&quot;&gt;你好&lt;/mark&gt; ,Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://he</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DB</title>
    <link href="https://money.github.io/2020/12/09/DB/"/>
    <id>https://money.github.io/2020/12/09/DB/</id>
    <published>2020-12-09T07:30:39.000Z</published>
    <updated>2021-06-08T09:03:10.836Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库设计-2020-12更新"><a href="#数据库设计-2020-12更新" class="headerlink" title="数据库设计(2020.12更新)"></a><strong>数据库设计(2020.12更新)</strong></h2><br><ol><li><h3 id="数据库常见题"><a href="#数据库常见题" class="headerlink" title="数据库常见题"></a><a href="https://blog.csdn.net/u011168837/article/details/109651266"><abbr title="地址1">数据库常见题</abbr></a></h3></li><li><h3 id=""><a href="#" class="headerlink" title=""></a><a href=""><abbr title="地址2"></abbr></a></h3></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据库设计-2020-12更新&quot;&gt;&lt;a href=&quot;#数据库设计-2020-12更新&quot; class=&quot;headerlink&quot; title=&quot;数据库设计(2020.12更新)&quot;&gt;&lt;/a&gt;&lt;strong&gt;数据库设计(2020.12更新)&lt;/strong&gt;&lt;/h2&gt;&lt;b</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>data-structure</title>
    <link href="https://money.github.io/2020/12/09/data-structure/"/>
    <id>https://money.github.io/2020/12/09/data-structure/</id>
    <published>2020-12-09T07:11:10.000Z</published>
    <updated>2021-06-08T09:01:53.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据结构-2020-12更新"><a href="#数据结构-2020-12更新" class="headerlink" title="数据结构(2020.12更新)"></a><strong>数据结构(2020.12更新)</strong></h2><br><ul><li><h3 id="常见算法"><a href="#常见算法" class="headerlink" title="常见算法"></a><strong>常见算法</strong></h3></li></ul><ul><li><a href="https://www.cnblogs.com/holaplace/p/13956028.html"><mark>常见排序与搜索算法总结</mark></a></li></ul><ol><li><h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a><strong>插入排序</strong></h4>i从0~len-1中，在前面的序列中给它重新安家（要不断挪其他元素）</li></ol><ol start="2"><li><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a><strong>冒泡排序</strong></h4></li></ol><p>重复遍历要排序的数列，一次比较两个元素，如果顺序错误则交换。每次比较的数量从后往前-1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public class demo_sort &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //冒泡排序算法</span><br><span class="line">        int[] numbers=new int[]&#123;1,5,8,2,3,9,4&#125;;</span><br><span class="line">        //需进行length-1次冒泡</span><br><span class="line">        for(int i=0;i&lt;numbers.length-1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(int j=0;j&lt;numbers.length-1-i;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(numbers[j]&gt;numbers[j+1])</span><br><span class="line">                &#123;</span><br><span class="line">                    int temp=numbers[j];</span><br><span class="line">                    numbers[j]=numbers[j+1];</span><br><span class="line">                    numbers[j+1]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;从小到大排序后的结果是:&quot;);</span><br><span class="line">        for(i=0;i&lt;numbers.length;i++)</span><br><span class="line">            System.out.print(numbers[i]+&quot; &quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a><strong>选择排序</strong></h4>从一端到另一端，每次比较n,n-1….1个数据，每次挑个最小的，放入第1,2….n位。保证每次都能选出个最小的，放在开头。从头至尾依次扫描未排序序列，将扫描到的每个元素插入有序序列的适当位置。每次swap一个就Okay</li></ol><ol start="4"><li><h4 id="希尔排序（分组插入排序）"><a href="#希尔排序（分组插入排序）" class="headerlink" title="希尔排序（分组插入排序）"></a><strong>希尔排序（分组插入排序）</strong></h4><p>gap不断递减，在每次的分组里分别做排序。类推</p></li><li><h4 id="归并排序（先分组再合并）"><a href="#归并排序（先分组再合并）" class="headerlink" title="归并排序（先分组再合并）"></a><strong>归并排序（先分组再合并）</strong></h4><p>不断分组，再比较，每在一对数组里选走一个数字，其分组指针向后移一位，继续进行比较。</p></li><li><h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a><strong>快速排序</strong></h4><p>拎出一个pivot(选个最左边的)，从hi开始，选第一个所指的，大于pivot则放在hi上，hi左移，读左移后指向的元素进行比较。相反同理，直至low和hi搞一块，则pivot赋值过去。</p></li><li><h4 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a><strong>堆排序</strong></h4><p>大顶堆：每个节点的值都大于或等于其子节点的值，在堆排序算法中用于<strong>升序</strong>排列；</p></li></ol><p>小顶堆：每个节点的值都小于或等于其子节点的值，在堆排序算法中用于<strong>降序</strong>排列；</p><br><ul><li><h3 id="红黑树（AVL平衡二叉树后裔）"><a href="#红黑树（AVL平衡二叉树后裔）" class="headerlink" title="红黑树（AVL平衡二叉树后裔）"></a><strong>红黑树（AVL平衡二叉树后裔）</strong></h3></li></ul><ol><li><em><strong>AVL树</strong></em></li></ol><p>找到插入路径上离插入节点最近的平衡因子的绝对值大于1的结点A，进行位置调整</p><br><ul><li><h3 id=""><a href="#" class="headerlink" title="."></a><strong><a href=""><mark>.</mark></a></strong></h3></li></ul><br><ul><li><h3 id="-1"><a href="#-1" class="headerlink" title=".."></a><strong>..</strong></h3></li></ul> <br><ul><li><h3 id="…"><a href="#…" class="headerlink" title="…"></a><strong><mark>…</mark></strong></h3></li></ul><br>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数据结构-2020-12更新&quot;&gt;&lt;a href=&quot;#数据结构-2020-12更新&quot; class=&quot;headerlink&quot; title=&quot;数据结构(2020.12更新)&quot;&gt;&lt;/a&gt;&lt;strong&gt;数据结构(2020.12更新)&lt;/strong&gt;&lt;/h2&gt;&lt;br&gt;

</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Future</title>
    <link href="https://money.github.io/2020/12/09/Future/"/>
    <id>https://money.github.io/2020/12/09/Future/</id>
    <published>2020-12-09T00:54:15.000Z</published>
    <updated>2021-06-08T09:05:24.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人提升收集资料整理"><a href="#个人提升收集资料整理" class="headerlink" title="个人提升收集资料整理"></a><strong>个人提升收集资料整理</strong></h1><br><h2 id="逻辑方面"><a href="#逻辑方面" class="headerlink" title="逻辑方面"></a><em><strong>逻辑方面</strong></em></h2><br><h2 id="JAVA【重视每一个原理】"><a href="#JAVA【重视每一个原理】" class="headerlink" title="JAVA【重视每一个原理】"></a><em><strong>JAVA【重视每一个原理】</strong></em></h2><ol><li><h3 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a><strong><a href="https://oxox.online/post/java-basic/">Java基础</a></strong></h3></li><li><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a><strong><a href="https://oxox.online/post/spring/">Spring</a></strong></h3></li><li><h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a><strong>MyBatis</strong></h3></li><li><h3 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a><strong>Hibernate</strong></h3></li><li><h3 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a><strong>SpringMVC</strong></h3></li><li><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a><strong>Redis</strong></h3></li><li><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a><strong>分布式</strong></h3></li><li><h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a><strong>网络编程</strong></h3></li><li><h3 id="优化和安全"><a href="#优化和安全" class="headerlink" title="优化和安全"></a><strong>优化和安全</strong></h3></li><li><h3 id="精选合集"><a href="#精选合集" class="headerlink" title="精选合集"></a><strong><a href="">精选合集</a></strong></h3></li></ol><br><h2 id="数据库相关"><a href="#数据库相关" class="headerlink" title="数据库相关"></a><em><strong>数据库相关</strong></em></h2><ul><li><h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a><strong><a href="https://oxox.online/post/db">数据库设计</a></strong></h3></li><li><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><strong>MySQL</strong></h3></li><li><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a><strong><a href="https://oxox.online/post/oracle">Oracle</a></strong></h3></li></ul><br><h2 id="其他计算机相关课程"><a href="#其他计算机相关课程" class="headerlink" title="其他计算机相关课程"></a><em><strong>其他计算机相关课程</strong></em></h2><ul><li><h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a><strong>计算机网络</strong></h3></li></ul><br><ul><li><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a><strong><a href="https://oxox.online/post/data-structure"><mark>数据结构</mark></a></strong></h3></li></ul><br><ul><li><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a><strong>深度学习</strong></h3></li></ul> <br><ul><li><h3 id="网页设计"><a href="#网页设计" class="headerlink" title="网页设计"></a><strong><mark>网页设计</mark></strong></h3></li></ul><br><ul><li><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><strong>Linux</strong></h3></li></ul><br><ul><li><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a><strong>操作系统</strong></h3></li></ul><br><ul><li><h3 id="软件测试"><a href="#软件测试" class="headerlink" title="软件测试"></a><strong>软件测试</strong></h3></li></ul><br><ul><li><h3 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a><strong><a href="">信息安全</a></strong></h3></li></ul><br><h2 id="个人专业拓展提高，其余方面积累"><a href="#个人专业拓展提高，其余方面积累" class="headerlink" title="个人专业拓展提高，其余方面积累"></a><em><strong>个人专业拓展提高，其余方面积累</strong></em></h2><ul><li><h3 id="计算机思想"><a href="#计算机思想" class="headerlink" title="计算机思想"></a><strong>计算机思想</strong></h3></li><li><h3 id="Leetcode"><a href="#Leetcode" class="headerlink" title="Leetcode"></a><strong>Leetcode</strong></h3></li><li><h3 id="个人项目"><a href="#个人项目" class="headerlink" title="个人项目"></a><strong>个人项目</strong></h3></li><li><h3 id="课外书籍"><a href="#课外书籍" class="headerlink" title="课外书籍"></a><strong>课外书籍</strong></h3></li><li><h3 id="外语"><a href="#外语" class="headerlink" title="外语"></a><strong>外语</strong></h3></li><li><h3 id="运动"><a href="#运动" class="headerlink" title="运动"></a><strong>运动</strong></h3></li></ul><br><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a><em><strong>常用工具</strong></em></h2><ul><li><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a><strong><a href="https://blog.csdn.net/wu020708/article/details/52120530">Git</a></strong></h3></li><li><h3 id="PS（后续学习）"><a href="#PS（后续学习）" class="headerlink" title="PS（后续学习）"></a><strong>PS（后续学习）</strong></h3></li><li><h3 id="AE（后续学习）"><a href="#AE（后续学习）" class="headerlink" title="AE（后续学习）"></a><strong>AE（后续学习）</strong></h3></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;个人提升收集资料整理&quot;&gt;&lt;a href=&quot;#个人提升收集资料整理&quot; class=&quot;headerlink&quot; title=&quot;个人提升收集资料整理&quot;&gt;&lt;/a&gt;&lt;strong&gt;个人提升收集资料整理&lt;/strong&gt;&lt;/h1&gt;&lt;br&gt;

&lt;h2 id=&quot;逻辑方面&quot;&gt;&lt;a h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>学习Javascript-高阶函数</title>
    <link href="https://money.github.io/2020/03/21/%E5%AD%A6%E4%B9%A0Javascript-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"/>
    <id>https://money.github.io/2020/03/21/%E5%AD%A6%E4%B9%A0Javascript-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</id>
    <published>2020-03-21T02:05:49.000Z</published>
    <updated>2021-06-08T08:55:03.028Z</updated>
    
    <content type="html"><![CDATA[<h3 id="抽象"><a href="#抽象" class="headerlink" title="抽象"></a><strong>抽象</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = <span class="number">0</span>, count = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (count &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">  total += count;</span><br><span class="line">  count += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(total);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Compared With the Following One</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sum(range(<span class="number">1</span>, <span class="number">10</span>)));</span><br></pre></td></tr></table></figure><ul><li><p>在程序设计中，我们把这种编写代码的方式称为抽象。抽象可以隐藏底层的实现细节，从更高（或更加抽象）的层次看待我们要解决的问题。</p></li><li><p>我们可以使用函数来定义我们想做的事，而函数也是值，因此我们可以将期望执行的操作封装成函数，然后传递进来。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">repeat</span>(<span class="params">n, action</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        action(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repeat(<span class="number">3</span>, <span class="built_in">console</span>.log);</span><br><span class="line"><span class="comment">// → 0</span></span><br><span class="line"><span class="comment">// → 1</span></span><br><span class="line"><span class="comment">// → 2</span></span><br></pre></td></tr></table></figure></li><li><p>你不必将预定义的函数传递给repeat。 通常情况下，你希望原地创建一个函数值。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> labels = [];</span><br><span class="line">repeat(<span class="number">5</span>, <span class="function"><span class="params">i</span> =&gt;</span> &#123;</span><br><span class="line">    labels.push(<span class="string">`Unit <span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(labels);</span><br><span class="line"><span class="comment">// → [&quot;Unit 1&quot;, &quot;Unit 2&quot;, &quot;Unit 3&quot;, &quot;Unit 4&quot;, &quot;Unit 5&quot;]</span></span><br></pre></td></tr></table></figure><h3 id="脚本数据集"><a href="#脚本数据集" class="headerlink" title="脚本数据集"></a><strong>脚本数据集</strong></h3></li><li><p>第 1 章中的 Unicode，该系统为书面语言中的每个字符分配一个数字。 大多数这些字符都与特定的脚本相关联。 该标准包含 140 个不同的脚本 - 81 个今天仍在使用，59 个是历史性的。</p></li><li><p>本章的编码沙箱中提供了SCRIPTS绑定。 该绑定包含一组对象，其中每个对象都描述了一个脚本。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Coptic&quot;</span>,</span><br><span class="line">  <span class="attr">ranges</span>: [[<span class="number">994</span>, <span class="number">1008</span>], [<span class="number">11392</span>, <span class="number">11508</span>], [<span class="number">11513</span>, <span class="number">11520</span>]],</span><br><span class="line">  <span class="attr">direction</span>: <span class="string">&quot;ltr&quot;</span>,</span><br><span class="line">  <span class="attr">year</span>: -<span class="number">200</span>,</span><br><span class="line">  <span class="attr">living</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">link</span>: <span class="string">&quot;https://en.wikipedia.org/wiki/Coptic_alphabet&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ranges属性包含 Unicode 字符范围数组，每个数组都有两元素，包含下限和上限。 这些范围内的任何字符码都会分配给脚本。 下限是包括的（代码 994 是一个科普特字符），并且上限排除在外（代码 1008 不是）。</p><h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a><strong>高阶函数</strong></h3><p>如果一个函数操作其他函数，即将其他函数作为参数或将函数作为返回值，那么我们可以将其称为高阶函数。</p><h4 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a><em><strong>疑问</strong></em></h4><ul><li>怎么传参的<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greaterThan</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">m</span> =&gt;</span> m &gt; n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> greaterThan10 = greaterThan(<span class="number">10</span>);</span><br><span class="line"><span class="built_in">console</span>.log(greaterThan10(<span class="number">11</span>));</span><br><span class="line"><span class="comment">// → true</span></span><br></pre></td></tr></table></figure></li><li>后来理解，return的是一个函数,等同于<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">return (function(m)&#123;</span><br><span class="line">    return m&gt;n;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>可以使用高阶函数来修改其他的函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noisy</span>(<span class="params">f</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;calling with&quot;</span>, args);</span><br><span class="line">    <span class="keyword">let</span> result = f(...args);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;called with&quot;</span>, args, <span class="string">&quot;, returned&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">noisy(<span class="built_in">Math</span>.min)(<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// → calling with [3, 2, 1]</span></span><br><span class="line"><span class="comment">// → called with [3, 2, 1] , returned 1</span></span><br></pre></td></tr></table></figure></li><li><p>有一个内置的数组方法，forEach，它提供了类似for/of循环的东西，作为一个高阶函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>].forEach(<span class="function"><span class="params">l</span> =&gt;</span> <span class="built_in">console</span>.log(l));</span><br><span class="line"><span class="comment">// → A</span></span><br><span class="line"><span class="comment">// → B</span></span><br></pre></td></tr></table></figure></li><li><p>map方法对数组中的每个元素调用函数，然后利用返回值来构建一个新的数组，实现转换数组的操作。新建数组的长度与输入的数组一致，但其中的内容却通过对每个元素调用的函数“映射”成新的形式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">array, test</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> passed = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> element <span class="keyword">of</span> array) &#123;</span><br><span class="line">    <span class="keyword">if</span> (test(element)) &#123;</span><br><span class="line">      passed.push(element);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> passed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(filter(SCRIPTS, <span class="function"><span class="params">script</span> =&gt;</span> script.living));</span><br><span class="line"><span class="comment">// → [&#123;name: &quot;Adlam&quot;, …&#125;, …]</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map</span>(<span class="params">array, transform</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> mapped = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> element <span class="keyword">of</span> array) &#123;</span><br><span class="line">    mapped.push(transform(element));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> mapped;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> rtlScripts = SCRIPTS.filter(<span class="function"><span class="params">s</span> =&gt;</span> s.direction == <span class="string">&quot;rtl&quot;</span>); <span class="comment">//稍微有些难理解</span></span><br><span class="line"><span class="built_in">console</span>.log(map(rtlScripts, <span class="function"><span class="params">s</span> =&gt;</span> s.name));</span><br><span class="line"><span class="comment">// → [&quot;Adlam&quot;, &quot;Arabic&quot;, &quot;Imperial Aramaic&quot;, …]</span></span><br></pre></td></tr></table></figure><h3 id="使用reduce汇总数据"><a href="#使用reduce汇总数据" class="headerlink" title="使用reduce汇总数据"></a><strong>使用<code>reduce</code>汇总数据</strong></h3><p>与数组有关的另一个常见事情是从它们中计算单个值。表示这种模式的高阶操作称为归约（reduce）（有时也称为折叠（fold））。 它通过反复从数组中获取单个元素，并将其与当前值合并来构建一个值。</p></li><li><p>reduce函数包含三个参数：数组、执行合并操作的函数和初始值。该函数没有filter和map那样直观，所以仔细看看：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">array, combine, start</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> current = start; <span class="comment">//初始值，类似于i = 0;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> element <span class="keyword">of</span> array) &#123;</span><br><span class="line">    current = combine(current, element); <span class="comment">//处理函数</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> current; <span class="comment">//返回结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(reduce([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b, <span class="number">0</span>));</span><br><span class="line"><span class="comment">// → 10</span></span><br></pre></td></tr></table></figure></li><li><p>数组中有一个标准的reduce方法，当然和我们上面看到的那个函数一致，可以简化合并操作。如果你的数组中包含多个元素，<strong>在调用reduce方法的时候忽略了start参数</strong>，那么<code>该方法将会使用数组中的第一个元素作为初始值，并从第二个元素开始执行合并操作</code>。</p></li><li><p>为了使用reduce（两次）来查找字符最多的脚本，我们可以这样写：(<mark>看懂了一些</mark>)<br>characterCount函数通过累加范围的大小，来减少分配给脚本的范围。 请注意归约器函数的参数列表中使用的解构。 `reduce’的第二次调用通过重复比较两个脚本并返回更大的脚本，使用它来查找最大的脚本。</p></li><li><p><em><strong>也就是说characterCount函数的reduce是为了统计一段字符的字符数，而SCRIPTS.reduce就像是循环一样，反复比较，每次拿出选出一个最大的进行下一轮的对比。最后得出字符数最多的元素</strong></em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">characterCount</span>(<span class="params">script</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> script.ranges.reduce(<span class="function">(<span class="params">count, [<span class="keyword">from</span>, to]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> count + (to - <span class="keyword">from</span>);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(SCRIPTS.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> characterCount(a) &lt; characterCount(b) ? b : a;</span><br><span class="line">&#125;));</span><br><span class="line"><span class="comment">// → &#123;name: &quot;Han&quot;, …&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="可组合性"><a href="#可组合性" class="headerlink" title="可组合性"></a><strong>可组合性</strong></h3><ul><li>当你需要组合操作时，高阶函数的价值就突显出来了。举个例子，我们编写一段代码，找出数据集中男人和女人的平均年龄。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">average</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> array.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b) / array.length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//疑问：Filter是不是就是一个reduce？</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(average(</span><br><span class="line">  SCRIPTS.filter(<span class="function"><span class="params">s</span> =&gt;</span> s.living).map(<span class="function"><span class="params">s</span> =&gt;</span> s.year))));</span><br><span class="line"><span class="comment">// → 1185</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(average(</span><br><span class="line">  SCRIPTS.filter(<span class="function"><span class="params">s</span> =&gt;</span> !s.living).map(<span class="function"><span class="params">s</span> =&gt;</span> s.year))));</span><br><span class="line"><span class="comment">// → 209</span></span><br></pre></td></tr></table></figure></li><li>你当然也可以把这个计算写成一个大循环。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> total = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> script <span class="keyword">of</span> SCRIPTS) &#123;</span><br><span class="line">  <span class="keyword">if</span> (script.living) &#123;</span><br><span class="line">    total += script.year;</span><br><span class="line">    count += <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(total / count));</span><br><span class="line"><span class="comment">// → 1185</span></span><br></pre></td></tr></table></figure><blockquote><p>但很难看到正在计算什么以及如何计算。 而且由于中间结果并不表示为一致的值，因此将“平均值”之类的东西提取到单独的函数中，需要更多的工作。<br>就计算机实际在做什么而言，这两种方法也是完全不同的。 第一个在运行filter和map的时候会建立新的数组，而第二个只会计算一些数字，从而减少工作量。 你通常可以采用可读的方法，但是如果你正在处理巨大的数组，并且多次执行这些操作，那么抽象风格的加速就是值得的。</p></blockquote></li></ul><h3 id="本章小结"><a href="#本章小结" class="headerlink" title="本章小结"></a><strong>本章小结</strong></h3><ul><li><p>能够将函数值传递给其他函数，是 JavaScript 的一个非常有用的方面。 它允许我们编写函数，用它们中的“间隙”对计算建模。 调用这些函数的代码，可以通过提供函数值来填补间隙。</p></li><li><p>数组提供了许多有用的高阶方法。 你可以使用<kbd>forEach</kbd>来遍历数组中的元素。 <kbd>filter</kbd>方法返回一个新数组，只包含通过谓词函数的元素。 通过将函数应用于每个元素的数组转换，使用<kbd>map</kbd>来完成。 你可以使用<kbd>reduce</kbd>将数组中的所有元素合并为一个值。 <kbd>some</kbd>方法测试任何元素是否匹配给定的谓词函数。 <kbd>findIndex</kbd>找到匹配谓词的第一个元素的位置, 这个方法有点像indexOf，但它不是查找特定的值，而是查找给定函数返回true的第一个值。 像indexOf一样，当没有找到这样的元素时，它返回 -1。。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;抽象&quot;&gt;&lt;a href=&quot;#抽象&quot; class=&quot;headerlink&quot; title=&quot;抽象&quot;&gt;&lt;/a&gt;&lt;strong&gt;抽象&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>迁移Wordpress</title>
    <link href="https://money.github.io/2020/03/20/%E8%BF%81%E7%A7%BBWordpress/"/>
    <id>https://money.github.io/2020/03/20/%E8%BF%81%E7%A7%BBWordpress/</id>
    <published>2020-03-20T05:55:10.000Z</published>
    <updated>2021-06-08T08:37:35.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="跨平台、不同版本Wordpress不完美迁移、升级日记"><a href="#跨平台、不同版本Wordpress不完美迁移、升级日记" class="headerlink" title="跨平台、不同版本Wordpress不完美迁移、升级日记"></a>跨平台、不同版本Wordpress不完美迁移、升级日记</h2><ul><li><p>供以后使用</p></li><li><p>本来自己之前的Wordpress固定链接（伪静态）没有搞好，导致文章的访问路径不好看。此外刚开始编辑网站的时候，部分资源没自动转HTTPS，导致Chrome显示有安全风险，加上网站年久失修，想要趁疫情期间抽空修改一下。网上浏览一些，一键迁移已经很方便了，我这边自己找了很多方法，结合了一下。因为Wordpress的服务器使用的是<mark>CentOS7</mark>的系统，近期使用<mark>Debian</mark>较多，所以就在Vultr新开了一个Debian10的系统，配上宝塔比较方便操作。</p><br>### ***操作步骤***</li><li><p>备份工作，以防万一    </p><ul><li>Vultr原机子创建快照，加上备份<br></li><li>Wordpress上设置里Tools-&gt;Export导出XML文件，下载到本地</li><li>原机子宝塔面板在对应网站备份、数据库备份，下载到本地</li><li>原机子通过宝塔面板进入phpMyAdmin，选中网站数据库，自定义默认导出sql文件，下载到本地</li><li>Wordpress安装<kbd>UpdraftPlus - Backup/Restore</kbd>，备份所有，同步云端，下载到本地</li></ul></li><li><p>新建机子，迁移网站</p><ul><li>Vultr新建机子，原机子宝塔面板暂停网站运行。DNS解析上将域名对应地址改至新机器的IP，新机子SSH连上安装宝塔面板，默认极速安装，创建相同域名网站（在提示时同时安装FTP, 数据库，数据库编码选utf8emb4），将原来SSL证书部署到新机子上，在面板的网站的伪静态功能选择wordpress。或是通过SSH工具或面板管理里将对应网站下的.htaccess文件修改为如下:</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line"></span><br><span class="line">RewriteEngine On</span><br><span class="line"></span><br><span class="line">RewriteBase /</span><br><span class="line"></span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line"></span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line"></span><br><span class="line">RewriteRule . /index.php [L]</span><br><span class="line"></span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><ul><li>宝塔的安装结束后，进入phpMyAdmin会发现有Warning，发现错误在一个continue语句需要改成break。用SSH或面板工具到提示的路径文件下，编辑文件，将语句改正警告即可消失。</li><li>我用的是SSH，命令行wget下载wordpress压缩包，在对应网站根目录解压。因为是由root操作的，文件夹内的部分为root所有，而这之后会导致WP在安装插件时因用户组的问题导致出现FTP的密码请求问题，这不太友好，所以在SSH登录后到对应网站根目录的上级，将所有者归www, 接着更改权限至775（到面板里调整也可），777感觉太危险了，有说法是WP-Content内部的文件应该开644的，而.htaccess和wp-config.php文件应该为444。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R www:www Your_Website_Name/</span><br><span class="line">chmod -R 755 Your_Website_Name/</span><br></pre></td></tr></table></figure><ul><li>输入自己的域名，稍等后出现Wordpress安装界面，输入自己设置的数据库信息，成功登录</li></ul></li><li><p>恢复内容</p><ul><li>WP在我认知里主要是由网页、插件、主题、Media组成。</li><li>进入后先到Settings里把Permalinks里更改固定链接，我是按Post-Name来，这样清爽</li><li>在插件里安装<kbd>UpdraftPlus - Backup/Restore</kbd>，连接自己的云端，因为我自己想要大改一下网站，所以只恢复了Themes和Uploads，一般根据需要恢复就可以<br><br><div align=center><img src="/img/backup1.png" width = "80%" height = "auto" alt = "Restore1" align= "center" /></div><br><br></li><li>陆续安装好自己需要的其他插件（或者直接在上一步恢复掉）</li><li>接着到Tools的Import里安装WordPress，然后打开导入器，将之前保存的XML文件上传，这样网站的结构和网页就恢复了。而之前云端已经恢复了媒体文件，总体上就大丈夫了     </li><li>因为我的网站内容之前有HTTP的链接，会出现Mixed Content Error，看不到那安全小锁，所以F12看看对应网页哪些因素是飙黄的警告的，为了方便可以Open一下对应文件内容，看看是哪些图片的问题。之后到对应Post或Page上重新导入图片并贴上去，因为之前设置过跳HTTPS,所以导入链接就是HTTPS的了。保存一下更改，就解决问题了。</li></ul><ul><li>也可以安装<kbd>SSL Insecure Content Fixer</kbd>插件，在Tools里的Search &amp; Replace页面里输入<a href="http://your_website_name/">http://Your_Website_Name</a>, 替换成<a href="https://your_website_name/">https://Your_Website_Name</a>, 选择wp_postmeta，然后Dry Run，会显示该目录下包含http的链接，查看无误后，取消勾选Dry Run,再选择Save changes to Database，这样一些不安全的链接会转成HTTPS。其他文件夹我没试过<br><br><div align=center><img src="/img/backup2.png" width = "80%" height = "auto" alt = "Restore2" align= "center" /></div><!-- ![Restore](/images/backup2.png =400x) --><br><br></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;跨平台、不同版本Wordpress不完美迁移、升级日记&quot;&gt;&lt;a href=&quot;#跨平台、不同版本Wordpress不完美迁移、升级日记&quot; class=&quot;headerlink&quot; title=&quot;跨平台、不同版本Wordpress不完美迁移、升级日记&quot;&gt;&lt;/a&gt;跨平台、不</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>阅读小记-The Collective Quarterly</title>
    <link href="https://money.github.io/2020/03/18/%E9%98%85%E8%AF%BB%E5%B0%8F%E8%AE%B0-The-Collective-Quarterly/"/>
    <id>https://money.github.io/2020/03/18/%E9%98%85%E8%AF%BB%E5%B0%8F%E8%AE%B0-The-Collective-Quarterly/</id>
    <published>2020-03-18T07:50:16.000Z</published>
    <updated>2021-06-08T08:59:08.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="日与夜，那动人粉红时刻"><a href="#日与夜，那动人粉红时刻" class="headerlink" title="日与夜，那动人粉红时刻"></a>日与夜，那动人粉红时刻</h2><ul><li>记阅读（版权归原书所有）<br><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/location1.jpg" width = "50%" height = "auto" alt = "地点" align= "center" /></div><br></li></ul><p>&emsp;&emsp;<abbr title="Graphics Interchange Format">变换，不安，二重性</abbr>。这些标签在我们前往加利福尼亚的中部海岸时，从脑中浮现。<br><br></p><p>&emsp;&emsp;旅行之时，我们探寻当地那一瞬间展现的本真。我们渴望的是一个不断轮回的主题，讲述了那里的居民的生活以及这些人想奋力表达着的核心问题。<br><br></p><p>&emsp;&emsp;最新一册的《随季而集》将追随到圣巴巴拉以西，奥海镇以东和文图拉以南所形成的直角地区上。绝佳的海水连绵不绝地拍打着海岸，接着退去，轻抚这片炙地。细雨如至，这里的丛林里飘散着的橡木清香，和塞斯珀荒野那地表翻滚的热泉相伴。此处也是机车手在这段沿海公路的疾驰之所。<br><br><br><br><br><br></p><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/5.jpg" width = "60%" height = "auto" alt = "实拍5" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/1.jpg" width = "60%" height = "auto" alt = "实拍1" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/2.jpg" width = "60%" height = "auto" alt = "实拍2" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/3.jpg" width = "60%" height = "auto" alt = "实拍3" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/4.jpg" width = "60%" height = "auto" alt = "实拍4" align= "center" /></div><br>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;日与夜，那动人粉红时刻&quot;&gt;&lt;a href=&quot;#日与夜，那动人粉红时刻&quot; class=&quot;headerlink&quot; title=&quot;日与夜，那动人粉红时刻&quot;&gt;&lt;/a&gt;日与夜，那动人粉红时刻&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;记阅读（版权归原书所有）&lt;br&gt;
&lt;br&gt;
&lt;div a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2020年02月记观看《我不受欢迎，怎么想都是你们的错！》</title>
    <link href="https://money.github.io/2020/02/23/2020%E5%B9%B402%E6%9C%88%E8%AE%B0%E8%A7%82%E7%9C%8B%E3%80%8A%E6%88%91%E4%B8%8D%E5%8F%97%E6%AC%A2%E8%BF%8E%EF%BC%8C%E6%80%8E%E4%B9%88%E6%83%B3%E9%83%BD%E6%98%AF%E4%BD%A0%E4%BB%AC%E7%9A%84%E9%94%99%EF%BC%81%E3%80%8B/"/>
    <id>https://money.github.io/2020/02/23/2020%E5%B9%B402%E6%9C%88%E8%AE%B0%E8%A7%82%E7%9C%8B%E3%80%8A%E6%88%91%E4%B8%8D%E5%8F%97%E6%AC%A2%E8%BF%8E%EF%BC%8C%E6%80%8E%E4%B9%88%E6%83%B3%E9%83%BD%E6%98%AF%E4%BD%A0%E4%BB%AC%E7%9A%84%E9%94%99%EF%BC%81%E3%80%8B/</id>
    <published>2020-02-23T08:13:40.000Z</published>
    <updated>2021-06-08T08:29:33.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="很多人说看这个笑着笑着就哭了"><a href="#很多人说看这个笑着笑着就哭了" class="headerlink" title="很多人说看这个笑着笑着就哭了"></a>很多人说看这个笑着笑着就哭了</h2><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-8-220.jpg" width = "80%" height = "auto" alt = "时间的泪" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-13-220.jpg" width = "80%" height = "auto" alt = "无尽的轮回终将到达尽头" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-3-221.jpg" width = "80%" height = "auto" alt = "再一次重生" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-3-220.jpg" width = "80%" height = "auto" alt = "无尽的轮回终将到达尽头" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-4-220.jpg" width = "80%" height = "auto" alt = "无尽的轮回终将到达尽头" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-15-220.jpg" width = "80%" height = "auto" alt = "无尽的轮回终将到达尽头" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-4-221.jpg" width = "80%" height = "auto" alt = "无尽的轮回终将到达尽头" align= "center" /></div><br><div align=center><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-12-220.jpg" width = "80%" height = "auto" alt = "无尽的轮回终将到达尽头" align= "center" /></div><br><ul><li>对我来说任何人都没有过错</li><li>有观众就会有演员，展示和被展示，时刻在发生着，改变自己总是比改变他人更困难吧</li><li>看世界的方式不一样，为何要<strong>改变</strong>呢，为何又<strong>不改变</strong>呢</li><li>爱的量是恒定的，只不过撒向的地方不同呢</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;很多人说看这个笑着笑着就哭了&quot;&gt;&lt;a href=&quot;#很多人说看这个笑着笑着就哭了&quot; class=&quot;headerlink&quot; title=&quot;很多人说看这个笑着笑着就哭了&quot;&gt;&lt;/a&gt;很多人说看这个笑着笑着就哭了&lt;/h2&gt;&lt;div align=center&gt;&lt;img sr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2020年01-02月番剧记录</title>
    <link href="https://money.github.io/2020/02/13/2020%E5%B9%B401-02%E6%9C%88%E7%95%AA%E5%89%A7%E8%AE%B0%E5%BD%95/"/>
    <id>https://money.github.io/2020/02/13/2020%E5%B9%B401-02%E6%9C%88%E7%95%AA%E5%89%A7%E8%AE%B0%E5%BD%95/</id>
    <published>2020-02-13T11:22:56.000Z</published>
    <updated>2021-06-08T08:25:45.844Z</updated>
    
    <content type="html"><![CDATA[<h2 id="入间同学入魔了"><a href="#入间同学入魔了" class="headerlink" title="入间同学入魔了"></a>入间同学入魔了</h2><p><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-1-29.jpg" alt="欧佩拉超帅的呢~"></p><ul><li>温馨、日常搞笑</li></ul><h2 id="彼之初"><a href="#彼之初" class="headerlink" title="彼之初"></a>彼之初</h2><p><img src="https://github.com/MoneyChina/mdpics/raw/master/%E5%BD%BC%E4%B9%8B%E5%88%9D-1-114.jpg" alt="时间的泪"></p><p><img src="https://github.com/MoneyChina/mdpics/raw/master/%E5%BD%BC%E4%B9%8B%E5%88%9D-3-114.jpg" alt="无尽的轮回终将到达尽头"></p><p><img src="https://github.com/MoneyChina/mdpics/raw/master/%E5%BD%BC%E4%B9%8B%E5%88%9D-4-114.jpg" alt="再一次重生"></p><ul><li>当一部电影来看吧</li></ul><h2 id="龙王的工作"><a href="#龙王的工作" class="headerlink" title="龙王的工作"></a>龙王的工作</h2><p><img src="https://github.com/MoneyChina/mdpics/raw/master/bilibili-2.10.jpg" alt="爱的深沉"></p><ul><li>我要下车！</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;入间同学入魔了&quot;&gt;&lt;a href=&quot;#入间同学入魔了&quot; class=&quot;headerlink&quot; title=&quot;入间同学入魔了&quot;&gt;&lt;/a&gt;入间同学入魔了&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/MoneyChina/mdpics/raw</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>install-hugo</title>
    <link href="https://money.github.io/2020/02/13/install-hugo/"/>
    <id>https://money.github.io/2020/02/13/install-hugo/</id>
    <published>2020-02-13T05:37:41.000Z</published>
    <updated>2021-06-08T03:18:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从一台Debian服务器初步搭建Hugo静态网页"><a href="#从一台Debian服务器初步搭建Hugo静态网页" class="headerlink" title="从一台Debian服务器初步搭建Hugo静态网页"></a><strong>从一台Debian服务器初步搭建Hugo静态网页</strong></h2><ul><li><h3 id="服务器SSH连接"><a href="#服务器SSH连接" class="headerlink" title="服务器SSH连接"></a><em>服务器SSH连接</em></h3></li><li><h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a><em>更新系统</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get upgrade -y </span><br></pre></td></tr></table></figure></li><li><h3 id="为了操作的安全，创建一个新的具有sudo的权限的用户"><a href="#为了操作的安全，创建一个新的具有sudo的权限的用户" class="headerlink" title="为了操作的安全，创建一个新的具有sudo的权限的用户"></a><em>为了操作的安全，创建一个新的具有sudo的权限的用户</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@VM663:~<span class="comment"># adduser mytestuser</span></span><br><span class="line">password:密码自定</span><br><span class="line">其他连按回车填入默认信息</span><br><span class="line"></span><br><span class="line">完成后输入usermod -aG sudo mytestuser </span><br></pre></td></tr></table></figure></li><li><h3 id="登入新账户"><a href="#登入新账户" class="headerlink" title="登入新账户"></a><em>登入新账户</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - mytestuser </span><br></pre></td></tr></table></figure></li><li><h3 id="安装相关工具"><a href="#安装相关工具" class="headerlink" title="安装相关工具"></a><em>安装相关工具</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim git zip unzip python-pip</span><br><span class="line">sudo pip install Pygments</span><br><span class="line">可能需要输入你的密码</span><br></pre></td></tr></table></figure></li><li><h3 id="安装Apache并开启"><a href="#安装Apache并开启" class="headerlink" title="安装Apache并开启"></a><em>安装Apache并开启</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2 </span><br><span class="line">systemctl status apache2(ACTIVE显示正在运行)</span><br><span class="line">使用自己服务器的IP查看是否显示APACHE界面</span><br></pre></td></tr></table></figure></li><li><h3 id="安装Hugo"><a href="#安装Hugo" class="headerlink" title="安装Hugo"></a><em>安装Hugo</em></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line">sudo apt-get install https://github.com/gohugoio/hugo/releases/download/v0.64.1/hugo_0.64.1_Linux-64bit.tar.gz</span><br><span class="line"></span><br><span class="line">sudo unzip hugo_0.64.1_Linux-64bit.tar.gz</span><br><span class="line"></span><br><span class="line">hugo version 查看是否已经安装hugo，显示对应版本号应该就没问题了</span><br><span class="line">```bash</span><br><span class="line"></span><br><span class="line">* <span class="comment">### *去找自己喜欢的主题，不赘述了*</span></span><br><span class="line">```bash</span><br><span class="line">git <span class="built_in">clone</span> 自己喜欢的主题</span><br><span class="line">unzip ... etc</span><br><span class="line">```bash</span><br><span class="line"></span><br><span class="line">* <span class="comment">### *应用自己的主题*</span></span><br><span class="line">    * 先在hugo创建自己的网站</span><br><span class="line"></span><br><span class="line">    ```bash</span><br><span class="line">    sudo hugo new site **YOUR DOMAIN NAME**</span><br></pre></td></tr></table></figure><ul><li>建立一个md文件，hugo可以自动将其转换为对应的HTML</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hugo new posts/first-post.md</span><br></pre></td></tr></table></figure><ul><li>拷贝自己的主题的文件夹到网站下的themes目录下</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp **YOUR THEME NAME**/ **YOUR DOMAIN NAME**/themes -r</span><br></pre></td></tr></table></figure><ul><li>进入对应的hugo网站的目录进行设置</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> **YOUR DOMAIN NAME**</span><br><span class="line">sudo cp themes/**YOUR THEME NAME**/exampleSite/* . -r</span><br><span class="line">sudo vim config.yaml <span class="comment">#修改对应的配置文件（结尾不一定是yaml）</span></span><br><span class="line">要修改自己的baseURL为自己主机的IP</span><br><span class="line">baseURL: <span class="string">&quot;http://Your IP/&quot;</span></span><br><span class="line">Yaml文件中有些主题的对应文字可能缺失，如果发现无这一行，加上去：</span><br><span class="line">theme: <span class="string">&quot;**YOUR THEME NAME**&quot;</span> <span class="comment">#对应的主题的文件夹名字</span></span><br></pre></td></tr></table></figure><ul><li>修改完毕后测试</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hugo server --<span class="built_in">bind</span>=0.0.0.0 --baseUrl=http://Your IP/ -D -F</span><br></pre></td></tr></table></figure><ul><li>在浏览器输入自己的IP:1313查看是否能显示，可以的话继续</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hugo</span><br></pre></td></tr></table></figure><ul><li>只显示以下基本上无问题，一般warning很少</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Pages            | 29  </span><br><span class="line">Paginator pages  |  0  </span><br><span class="line">Non-page files   |  0  </span><br><span class="line">Static files     | 74  </span><br><span class="line">Processed images |  0  </span><br><span class="line">Aliases          |  9  </span><br><span class="line">Sitemaps         |  1  </span><br><span class="line">Cleaned          |  0     </span><br></pre></td></tr></table></figure></li><li><h3 id="关联主机与域名，配置Apache2，发布网站"><a href="#关联主机与域名，配置Apache2，发布网站" class="headerlink" title="关联主机与域名，配置Apache2，发布网站"></a><em>关联主机与域名，配置Apache2，发布网站</em></h3><ul><li><p>自己通过主机服务商弄好解析，准备好Apache2的HTTPS两个证书(.crt)和一个密钥(.pem),放在/etc/ssl的对应文件夹里</p></li><li><p>移动hugo网站文件夹到/var/www/html下</p></li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">sudo mkdir oxox1.online</span><br><span class="line">sudo cp -r /usr/<span class="built_in">local</span>/bin/**YOUR DOMAIN NAME**/* ./oxox1.online</span><br></pre></td></tr></table></figure><ul><li>设置Apache2</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod ssl</span><br><span class="line">sudo a2enmod rewrite</span><br><span class="line">sudo systemctl restart apache2</span><br><span class="line">sudo vim /etc/apache2/apache2.conf </span><br><span class="line"></span><br><span class="line">在里面加入【ServerName localhost】</span><br><span class="line"></span><br><span class="line">退出vim</span><br><span class="line"></span><br><span class="line">sudo systemctl reload apache2</span><br><span class="line"></span><br><span class="line">sudo vim /etc/apache2/sites-enabled/000-default.conf </span><br><span class="line"></span><br><span class="line">修改里面的字段，配置域名和对应文件夹和HTTPS，保存退出</span><br><span class="line"></span><br><span class="line">sudo vim .htaccess</span><br><span class="line">加入字段</span><br><span class="line">RewriteEngine On </span><br><span class="line">RewriteCond %&#123;HTTPS&#125;  !=on </span><br><span class="line">RewriteRule ^/?(.*) https://%&#123;SERVER_NAME&#125;/<span class="variable">$1</span> [R,L]</span><br><span class="line"></span><br><span class="line">sudo apache2ctl configtest</span><br><span class="line"></span><br><span class="line">OKAY表示通过</span><br><span class="line"></span><br><span class="line">sudo systemctl reload apache2 </span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;从一台Debian服务器初步搭建Hugo静态网页&quot;&gt;&lt;a href=&quot;#从一台Debian服务器初步搭建Hugo静态网页&quot; class=&quot;headerlink&quot; title=&quot;从一台Debian服务器初步搭建Hugo静态网页&quot;&gt;&lt;/a&gt;&lt;strong&gt;从一台Deb</summary>
      
    
    
    
    
  </entry>
  
</feed>
